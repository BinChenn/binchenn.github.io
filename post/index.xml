<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on binchen&#39;s blog</title>
    <link>https://binchenn.github.io/post/</link>
    <description>Recent content in Posts on binchen&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>binchen</copyright>
    <lastBuildDate>Wed, 03 Aug 2022 23:41:13 +0800</lastBuildDate><atom:link href="https://binchenn.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>搭建 WSL &#43; VSCode &#43; Clangd 开发环境</title>
      <link>https://binchenn.github.io/post/2022/wsl_vscode_clangd/</link>
      <pubDate>Wed, 03 Aug 2022 23:41:13 +0800</pubDate>
      
      <guid>https://binchenn.github.io/post/2022/wsl_vscode_clangd/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;随着 Windows 生态越来越开放和完善，WSL 对开发者的吸引力也越来越强，一些本来习惯 MacOS 等类 Unix 系统的开发者也开始尝试转向在 WSL 中开发，以此同时享受到 Windows 的多样性和类 Unix 系统的便利性。&lt;/p&gt;
&lt;p&gt;笔者目前的开发设备是一台公司配备的 MacOS 笔记本和个人的 Windows 笔记本，工作事务用公司电脑处理，私人事务用自己的电脑。工作之余也偶尔学习一些东西，写写笔记，这就带来一个问题：用公司电脑输出的个人内容如何完全掌握在个人手中，要知道的是，目前各大互联网公司对工作数据安全的要求都是非常严格的，通常禁止将工作电脑上的数据传输到外部设备。&lt;/p&gt;
&lt;p&gt;笔者对于这种要求表示理解，但也颇为无奈，只好彻底将个人数据和工作数据彻底物理隔离。除工作以外的任何事物，全部都用私人电脑处理，包括阅读的书籍、论文、读书笔记、私人代码等等。虽然有点麻烦，但彻底免除了后顾之忧。&lt;/p&gt;
&lt;h2 id=&#34;搭建流程&#34;&gt;搭建流程&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;安装 WSL&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;时值 2022 年，安装 WSL 已经非常简单了。只需要在微软应用商店搜索你想要的 Linux 发行版，点击安装即可。安装成功后，打开命令行验证一下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;base&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; PS C:&lt;span class=&#34;se&#34;&gt;\W&lt;/span&gt;indows&lt;span class=&#34;se&#34;&gt;\s&lt;/span&gt;ystem32&amp;gt; wsl -l
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;适用于 Linux 的 Windows 子系统分发版:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Ubuntu-20.04 &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;默认&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;安装 VSCode&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这个也是有手就行，在 &lt;a href=&#34;https://code.visualstudio.com/Download&#34;&gt;VSCode 官网&lt;/a&gt; 下载适配你处理器版本的安装包安装就可以了。&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;在 WSL 上安装 Clangd&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;笔者曾写过一篇如何在 &lt;a href=&#34;../2021/vscode_remote_clangd.md&#34;&gt;AliOS 上安装 Clangd&lt;/a&gt; 的博客，费尽周折。但在 WSL 中安装 Clangd 简直就是轻而易举，一条命令轻松搞定。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install clang-12 clangd-12 llvm-12 liblldb-12-dev
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;理想很丰满，现实很骨感。当你敲下命令的同时可能会发现，下载速度居然只有 10+kb/s，这得下到猴年马月。你可以 Google 搜索给 WSL 设置代理，笔者之前这样搞过，感觉比较繁琐。因此采用了一种更彻底的解决方案，即软路由科学上网，彻底摆脱各种繁琐的设置，享受畅快的上网体验，具体内容将会在下一篇博客中详细介绍。&lt;/p&gt;
&lt;p&gt;安装成功后，直接输出 &lt;code&gt;clangd&lt;/code&gt; 命令可能会报 &lt;code&gt;command not found&lt;/code&gt;，这是因为我们安装的是 clangd-12 版本，因此需要将 &lt;code&gt;/usr/bin&lt;/code&gt; 目录下的 &lt;code&gt;clangd-12&lt;/code&gt; 软连接修改为 &lt;code&gt;clangd&lt;/code&gt; ，否则 VSCode Clangd 插件会找不到命令，具体操作为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cd /usr/bin
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo mv clangd-12 clangd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;在 VSCode 中安装 WSL，Clangd 插件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这一步也非常简单&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;找个 C++ 项目试一下&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;笔者选择了 &lt;code&gt;leveldb&lt;/code&gt; ，Jeff Dean 大神写的 KV 数据库，非常值得学习&lt;/p&gt;
&lt;p&gt;注意：cmake 编译时要添加 &lt;code&gt;-DCMAKE_EXPORT_COMPILE_COMMANDS=1&lt;/code&gt; 选项，这样会在 build 目录中生成 compile_command.json 文件，供 clangd 生成索引。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone --recurse-submodules https://github.com/google/leveldb.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mkdir -p build &amp;amp;&amp;amp; cd build
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=1 .. &amp;amp;&amp;amp; cmake --build .
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;配置 VSCode Clangd 参数&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;将以下参数 写入 settings.json 即可&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &amp;#34;clangd.arguments&amp;#34;: [
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;--compile-commands-dir=${workspaceFolder}/build&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;-j=8&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;--background-index&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;--clang-tidy&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;--log=verbose&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &amp;#34;--pretty&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    ],
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;随便打开一个 cpp 文件，clangd 就会开始构建索引，实测对于 leveldb 这种小项目，不到 1 分钟构建完毕。&lt;/p&gt;
&lt;p&gt;接下来就是愉快的 leveldb 学习之旅了，祝旅途愉快。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>用 Hugo &#43; GithubPages 打造你的个人博客</title>
      <link>https://binchenn.github.io/post/2021/hugo_github_pages_blog/</link>
      <pubDate>Sat, 18 Dec 2021 15:15:51 +0800</pubDate>
      
      <guid>https://binchenn.github.io/post/2021/hugo_github_pages_blog/</guid>
      <description>介绍具体的搭建步骤之前，有一句话提醒自己，也提醒各位读者，最重要的事不是搭建网站，不是设计各种好看的主题，而是坚持写作，坚持记录和输出。 博客</description>
    </item>
    
    <item>
      <title>创刊词</title>
      <link>https://binchenn.github.io/post/2021/preface/</link>
      <pubDate>Tue, 14 Dec 2021 00:15:51 +0800</pubDate>
      
      <guid>https://binchenn.github.io/post/2021/preface/</guid>
      <description>入职半年有余，笔者曾经信誓旦旦要像很多互联网大神一样，把自己学过的东西、经历过的事，取其精华记录在案，一来作为自己学习总结的一种手段，二来作</description>
    </item>
    
    <item>
      <title>Install clangd in alios 7</title>
      <link>https://binchenn.github.io/post/2021/vscode_remote_clangd/</link>
      <pubDate>Sun, 12 Dec 2021 17:54:51 +0800</pubDate>
      
      <guid>https://binchenn.github.io/post/2021/vscode_remote_clangd/</guid>
      <description>clangd 是一款 C/C++ language server，可以很方便地进行代码跳转、提示、补全等，本文总结在 alios 7 上安装 clangd 的一些经验 根据 clangd 官网安装指南，有 3 种方式安装 clan</description>
    </item>
    
  </channel>
</rss>
